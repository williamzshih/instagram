generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  avatar    String     @default("https://upload.wikimedia.org/wikipedia/commons/2/2c/Default_pfp.svg")
  username  String     @unique
  name      String
  bio       String
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  bookmarks Bookmark[]
  followers Follow[]   @relation("followers")
  following Follow[]   @relation("following")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Post {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  user      User       @relation(fields: [email], references: [email])
  image     String
  caption   String
  comments  Comment[]
  likes     Like[]
  bookmarks Bookmark[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  user      User     @relation(fields: [email], references: [email])
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  user      User     @relation(fields: [email], references: [email])
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, postId])
}

model Bookmark {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  user      User     @relation(fields: [email], references: [email])
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, postId])
}

model Follow {
  id                         String   @id @default(auto()) @map("_id") @db.ObjectId
  userEmail                  String
  user                       User     @relation("following", fields: [userEmail], references: [email])
  whoTheyreFollowingUsername String
  whoTheyreFollowing         User     @relation("followers", fields: [whoTheyreFollowingUsername], references: [username])
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  @@unique([userEmail, whoTheyreFollowingUsername])
}
